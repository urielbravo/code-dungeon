---
import BaseLayout from "../../layouts/BaseLayout.astro"
import BlogPost from "../../components/BlogPost.astro"
import Torch from "../../components/Torch.astro"

export async function getStaticPaths() {
  const allPosts = await Astro.glob("../posts/*.md");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

const allPosts = await Astro.glob('../posts/*.md');
const tags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())]
---


<BaseLayout title={`${tag}`} >
    <Torch title={`posts with the tag '${tag}'`} />
    <div class="grid grid-cols-6 gap-4 w-full px-20">
      <section class="col-span-4">
        {posts.map((post: any) => <BlogPost url={`${post.url}`} title={post.frontmatter.title} intro={post.frontmatter.description} pubDate={post.frontmatter.pubDate} tags={post.frontmatter.tags} />)}
      </section>
      <section class="col-span-2 text-center">
        <span class="text-xl mb-5">Tags</span>
        {
      tags.map((tag) => (
        <p class="tag">
          <a href={`/tags/${tag}`}>{tag}</a>
        </p>
      ))
    }
      </section>
    </div>
    
</BaseLayout>